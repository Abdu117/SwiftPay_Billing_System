/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package manager;


import com.formdev.flatlaf.FlatDarkLaf;
import db_connection.db_connection;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.Vector;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

import net.proteanit.sql.DbUtils;

/**
 *
 * @author medo4
 */
public class ViewEmployeesInternalFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form ViewEmployeesInternalFrame
     */
    
     Connection con;
      db_connection c= new db_connection();
      public void fetch_employees()
      {
           con= c.connect();

            try {

                String selectedColoumns = "employee_id,name,role,phone,address,gender,sallary";

                PreparedStatement stmt = con.prepareStatement(
                        String.format("select %s from employee inner join emp_phone "
                                + "on employee.employee_id = emp_phone.id inner join emp_address "
                                + "on employee.employee_id = emp_address.id",selectedColoumns));

                ResultSet resultSet = stmt.executeQuery();
                
                EmployeeInfo.setModel(DbUtils.resultSetToTableModel(resultSet));

            } catch (SQLException ex) {
                System.out.println(ex);
            }
      }
      
            
    public ViewEmployeesInternalFrame() {
         try {
             UIManager.setLookAndFeel(new FlatDarkLaf());
         } catch (UnsupportedLookAndFeelException ex) {
             Logger.getLogger(ViewEmployeesInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
         }
            //view of internal frame modifications
            this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
            BasicInternalFrameUI ui= (BasicInternalFrameUI)this.getUI();
            ui.setNorthPane(null);
            //disable Resize for internalJframe
            this.setResizable(false);
     
        initComponents();
        fetch_employees();
       
      //  displayAllEmployees.setVisible(true);
      //  addNewEmployee.setVisible(false);
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        displayAllEmployees = new Employees_info.PanelGradient();
        SalaryLabel = new javax.swing.JLabel();
        searchLabel1 = new javax.swing.JLabel();
        PhoneLabel = new javax.swing.JLabel();
        RoleLabel = new javax.swing.JLabel();
        NameLabel = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        AddressField = new javax.swing.JTextField();
        NameField = new javax.swing.JTextField();
        RoleField = new javax.swing.JTextField();
        PhoneField = new javax.swing.JTextField();
        SalaryField = new javax.swing.JTextField();
        deleteEmployeeButton = new javax.swing.JButton();
        updateInfo = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        searchType = new javax.swing.JComboBox<>();
        title = new javax.swing.JLabel();
        panelGradient2 = new cashier.PanelGradient();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        EmployeeInfo = new javax.swing.JTable();
        AddressLabel1 = new javax.swing.JLabel();
        AddressLabel2 = new javax.swing.JLabel();
        title1 = new javax.swing.JLabel();
        AddressLabel3 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(942, 706));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        displayAllEmployees.setBackground(new java.awt.Color(0, 153, 204));
        displayAllEmployees.setForeground(new java.awt.Color(42, 42, 114));
        displayAllEmployees.setToolTipText("");
        displayAllEmployees.setColorGradient(new java.awt.Color(0, 153, 255));
        displayAllEmployees.setMinimumSize(new java.awt.Dimension(900, 610));
        displayAllEmployees.setName(""); // NOI18N
        displayAllEmployees.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SalaryLabel.setFont(new java.awt.Font("Tw Cen MT", 0, 20)); // NOI18N
        SalaryLabel.setForeground(new java.awt.Color(255, 255, 255));
        SalaryLabel.setText("Salary");
        displayAllEmployees.add(SalaryLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 620, 85, 28));

        searchLabel1.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        searchLabel1.setForeground(new java.awt.Color(255, 250, 244));
        searchLabel1.setText("search");
        displayAllEmployees.add(searchLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 70, 50));

        PhoneLabel.setFont(new java.awt.Font("Tw Cen MT", 0, 20)); // NOI18N
        PhoneLabel.setForeground(new java.awt.Color(255, 255, 255));
        PhoneLabel.setText("Phone");
        displayAllEmployees.add(PhoneLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, 70, 28));

        RoleLabel.setFont(new java.awt.Font("Tw Cen MT", 0, 20)); // NOI18N
        RoleLabel.setForeground(new java.awt.Color(255, 255, 255));
        RoleLabel.setText("Role");
        displayAllEmployees.add(RoleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 580, 60, 28));

        NameLabel.setFont(new java.awt.Font("Tw Cen MT", 0, 20)); // NOI18N
        NameLabel.setForeground(new java.awt.Color(255, 255, 255));
        NameLabel.setText("Name");
        displayAllEmployees.add(NameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 580, 78, 28));

        searchField.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        displayAllEmployees.add(searchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 160, 30));

        AddressField.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        displayAllEmployees.add(AddressField, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 620, 170, 30));

        NameField.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        displayAllEmployees.add(NameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 580, 170, 30));

        RoleField.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        displayAllEmployees.add(RoleField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 580, 170, 30));

        PhoneField.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        PhoneField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PhoneFieldActionPerformed(evt);
            }
        });
        displayAllEmployees.add(PhoneField, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 660, 170, 30));

        SalaryField.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        displayAllEmployees.add(SalaryField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 620, 170, 30));

        deleteEmployeeButton.setBackground(new java.awt.Color(255, 102, 0));
        deleteEmployeeButton.setFont(new java.awt.Font("Tw Cen MT", 0, 20)); // NOI18N
        deleteEmployeeButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteEmployeeButton.setText("Delete Employee");
        deleteEmployeeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteEmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEmployeeButtonActionPerformed(evt);
            }
        });
        displayAllEmployees.add(deleteEmployeeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 700, 170, 30));

        updateInfo.setFont(new java.awt.Font("Tw Cen MT", 0, 20)); // NOI18N
        updateInfo.setForeground(new java.awt.Color(255, 255, 255));
        updateInfo.setText("Update Info");
        updateInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateInfoActionPerformed(evt);
            }
        });
        displayAllEmployees.add(updateInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 700, 170, 30));

        searchButton.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        searchButton.setForeground(new java.awt.Color(255, 255, 255));
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        displayAllEmployees.add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 160, 170, 30));

        searchType.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        searchType.setForeground(new java.awt.Color(255, 255, 255));
        searchType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "id", "name", "phone", "role" }));
        searchType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTypeActionPerformed(evt);
            }
        });
        displayAllEmployees.add(searchType, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 160, 110, 30));

        title.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        title.setForeground(new java.awt.Color(255, 250, 244));
        title.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photos/teamwork.png"))); // NOI18N
        displayAllEmployees.add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 80, 80, 80));

        panelGradient2.setBackground(new java.awt.Color(102, 255, 102));
        panelGradient2.setToolTipText("Add New Employee");
        panelGradient2.setColorGradient(new java.awt.Color(0, 204, 102));
        panelGradient2.setRadius(40);
        panelGradient2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelGradient2MouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Gilroy ExtraBold", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("ADD EMPLOYEE");
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel7MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel7MousePressed(evt);
            }
        });
        panelGradient2.add(jLabel7);
        jLabel7.setBounds(20, 0, 210, 40);

        displayAllEmployees.add(panelGradient2, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 680, 250, 40));

        EmployeeInfo.setFont(new java.awt.Font("Tw Cen MT", 0, 16)); // NOI18N
        EmployeeInfo.setForeground(new java.awt.Color(255, 255, 255));
        EmployeeInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Employee_id", "name", "role", "phone", "address", "gender", "salary"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        EmployeeInfo.setSelectionBackground(new java.awt.Color(26, 226, 141));
        EmployeeInfo.setSelectionForeground(new java.awt.Color(255, 255, 255));
        EmployeeInfo.setShowVerticalLines(true);
        EmployeeInfo.getTableHeader().setReorderingAllowed(false);
        EmployeeInfo.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                EmployeeInfoAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        EmployeeInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EmployeeInfoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(EmployeeInfo);

        displayAllEmployees.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 890, 340));

        AddressLabel1.setFont(new java.awt.Font("Tw Cen MT", 0, 20)); // NOI18N
        AddressLabel1.setForeground(new java.awt.Color(255, 255, 255));
        AddressLabel1.setText("Address");
        displayAllEmployees.add(AddressLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 620, 100, 28));

        AddressLabel2.setFont(new java.awt.Font("Tw Cen MT", 0, 16)); // NOI18N
        AddressLabel2.setForeground(new java.awt.Color(255, 255, 255));
        AddressLabel2.setText("New Employee...");
        displayAllEmployees.add(AddressLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 640, 180, 40));

        title1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        title1.setForeground(new java.awt.Color(255, 250, 244));
        title1.setText("EMPLOYEE INFORMATION");
        displayAllEmployees.add(title1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 490, -1));

        AddressLabel3.setFont(new java.awt.Font("Tw Cen MT", 0, 28)); // NOI18N
        AddressLabel3.setForeground(new java.awt.Color(51, 255, 102));
        AddressLabel3.setText("------------------------ Data Edit ---------------------");
        displayAllEmployees.add(AddressLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, 640, 60));

        getContentPane().add(displayAllEmployees, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -90, 930, 750));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteEmployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEmployeeButtonActionPerformed
        // TODO add your handling code here:
        int row =        EmployeeInfo.getSelectedRow();

        if(row >= 0)
        {
            String id =      EmployeeInfo.getValueAt(row, 0).toString();
            try{
                PreparedStatement stmt = con.prepareStatement("BEGIN TRANSACTION;\n" +
                    "DECLARE @empID INT = ?;\n" +
                    "Delete from emp_phone where id = @empID;\n" +
                    "Delete from emp_address where id = @empID;\n" +
                    "Delete from employee where employee_id = @empID;\n" +
                    "COMMIT TRANSACTION;");

                stmt.setString(1, id);
                stmt.executeQuery();
                System.out.print("HERE");
            }catch (SQLException ex) {
                System.out.println(ex);
            }
            try {

                String selectedColoumns = "employee_id,name,role,phone,address,gender,sallary";

                PreparedStatement stmt = con.prepareStatement(
                    String.format("select %s from employee inner join emp_phone "
                        + "on employee.employee_id = emp_phone.id inner join emp_address "
                        + "on employee.employee_id = emp_address.id",selectedColoumns));

                ResultSet resultSet = stmt.executeQuery();

                EmployeeInfo.setModel(DbUtils.resultSetToTableModel(resultSet));
                JOptionPane.showMessageDialog(this, "Employee Removed Successfully !");

            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }

    }//GEN-LAST:event_deleteEmployeeButtonActionPerformed

    private void updateInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateInfoActionPerformed
        // TODO add your handling code here:
        if(EmployeeInfo.getSelectionModel().isSelectionEmpty())
        {
            JOptionPane.showMessageDialog(this, "Choose an Employee");
        }
        else
        {
            int row =        EmployeeInfo.getSelectedRow();
            String id =      EmployeeInfo.getValueAt(row, 0).toString();
            String name =    NameField.getText();
            String role =    RoleField.getText();
            String  phone =  PhoneField.getText();
            String address = AddressField.getText();
            float sallary =  Float.parseFloat(SalaryField.getText());

            if(NameField.getText().isEmpty()||RoleField.getText().isEmpty()||PhoneField.getText().isEmpty()||
                AddressField.getText().isEmpty()||SalaryField.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Enter all the fields");
            }
            else if(PhoneField.getText().length() != 11 || !PhoneField.getText().startsWith("01")
                || PhoneField.getText().contains("[a-zA-Z]+"))
            {
                JOptionPane.showMessageDialog(this, "Enter valid phone number");
            }
            else
            {
                try{
                    PreparedStatement stmt = con.prepareStatement("BEGIN TRANSACTION;"
                        +"DECLARE @emp_id INT = ?; "
                        +"UPDATE employee SET name = ?,role = ?,sallary = ? WHERE employee.employee_id = @emp_id; "
                        +"Update emp_phone SET phone = ? where id =@emp_id;"
                        +"Update emp_address SET address = ? where id =@emp_id; "
                        + "COMMIT TRANSACTION;");
                    stmt.setString(1, id);
                    stmt.setString(2, name);
                    stmt.setString(3, role);
                    stmt.setFloat(4, sallary);
                    stmt.setString(5, phone);
                    stmt.setString(6, address);
                    stmt.executeQuery();
                }
                catch (SQLException ex) {
                    System.out.println(ex);
                }

                try
                {
                    String selectedColoumns = "employee_id,name,role,phone,address,gender,sallary";

                    PreparedStatement stmt = con.prepareStatement(
                        String.format("select %s from employee inner join emp_phone "
                            + "on employee.employee_id = emp_phone.id inner join emp_address "
                            + "on employee.employee_id = emp_address.id",selectedColoumns));

                    ResultSet resultSet = stmt.executeQuery();

                    EmployeeInfo.setModel(DbUtils.resultSetToTableModel(resultSet));

                }
                catch (SQLException ex) {
                    System.out.println(ex);
                }
            }
        }

    }//GEN-LAST:event_updateInfoActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        if("".equals(searchField.getText().trim()))
        {
          //  JOptionPane.showMessageDialog(this, "Enter a value");
            fetch_employees();
        }
        else
        {

            try {
                String s;
                switch (searchType.getSelectedIndex()) {
                    case 1 ->  s = "name";
                    case 2 ->  s = "phone";
                    case 3 ->  s = "role";
                    default -> s = "employee_id";
                }

                String selectedColoumns = "employee_id,name,role,phone,address,gender,sallary";

                PreparedStatement stmt = con.prepareStatement(
                    String.format("select %s from employee inner join emp_phone "
                        + "on employee.employee_id = emp_phone.id inner join emp_address "
                        + "on employee.employee_id = emp_address.id where %s = ?",selectedColoumns,s));

                stmt.setString(1, searchField.getText().trim());

                ResultSet resultSet = stmt.executeQuery();

                EmployeeInfo.setModel(DbUtils.resultSetToTableModel(resultSet));

            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void jLabel7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseEntered
        jLabel7.setForeground(Color.CYAN);
    }//GEN-LAST:event_jLabel7MouseEntered

    private void jLabel7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseExited
       
         jLabel7.setForeground(Color.white);
    }//GEN-LAST:event_jLabel7MouseExited

    private void jLabel7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MousePressed
        ManagerPhase.jDesktopPane1.removeAll();
        ManagerPhase.jDesktopPane1.updateUI();
        NewEmpInternalFrame view_newemp=new NewEmpInternalFrame();
        ManagerPhase.jDesktopPane1.add(view_newemp).setVisible(true);
        
     
    }//GEN-LAST:event_jLabel7MousePressed

    private void EmployeeInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EmployeeInfoMouseClicked
        // TODO add your handling code here:
        int row =        EmployeeInfo.getSelectedRow();
        String name =    EmployeeInfo.getValueAt(row, 1).toString();
        String role =    EmployeeInfo.getValueAt(row, 2).toString();
        String phone =   EmployeeInfo.getValueAt(row, 3).toString();
        String address = EmployeeInfo.getValueAt(row, 4).toString();
        String salary =  EmployeeInfo.getValueAt(row, 6).toString();

        NameField.setText(name);
        RoleField.setText(role);
        PhoneField.setText(phone);
        AddressField.setText(address);
        SalaryField.setText(salary);

    }//GEN-LAST:event_EmployeeInfoMouseClicked

    private void searchTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTypeActionPerformed

    private void panelGradient2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelGradient2MouseClicked
        
        
        
    }//GEN-LAST:event_panelGradient2MouseClicked

    private void PhoneFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PhoneFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PhoneFieldActionPerformed

    private void EmployeeInfoAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_EmployeeInfoAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_EmployeeInfoAncestorAdded


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AddressField;
    private javax.swing.JLabel AddressLabel1;
    private javax.swing.JLabel AddressLabel2;
    private javax.swing.JLabel AddressLabel3;
    public javax.swing.JTable EmployeeInfo;
    private javax.swing.JTextField NameField;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JTextField PhoneField;
    private javax.swing.JLabel PhoneLabel;
    private javax.swing.JTextField RoleField;
    private javax.swing.JLabel RoleLabel;
    private javax.swing.JTextField SalaryField;
    private javax.swing.JLabel SalaryLabel;
    private javax.swing.JButton deleteEmployeeButton;
    public Employees_info.PanelGradient displayAllEmployees;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private cashier.PanelGradient panelGradient2;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JLabel searchLabel1;
    private javax.swing.JComboBox<String> searchType;
    private javax.swing.JLabel title;
    private javax.swing.JLabel title1;
    private javax.swing.JButton updateInfo;
    // End of variables declaration//GEN-END:variables
}
